{"ast":null,"code":"import { ShopActionTypes } from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collection => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collection\n});\nexport const fetchCollectionsFailure = error => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: error\n});\nexport const startFetchingCollectionsAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/viganzeqiri/Desktop/React/stone-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collection","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","error","FETCH_COLLECTIONS_FAILURE","startFetchingCollectionsAsync","dispatch","collectionRef","get","then","snapshot","collectionMap","catch","message"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,SACCC,SADD,EAECC,8BAFD,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,UAAU,KAAK;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA1C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,KAAK,KAAK;AAChDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD0B;AAEhDH,EAAAA,OAAO,EAAEE;AAFuC,CAAL,CAArC;AAKP,OAAO,MAAME,6BAA6B,GAAG,MAAM;AAClD,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAAGd,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACAO,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACXC,GADF,GAEEC,IAFF,CAEOC,QAAQ,IAAI;AACjB,YAAMC,aAAa,GAAGjB,8BAA8B,CAACgB,QAAD,CAApD;AACAJ,MAAAA,QAAQ,CAACR,uBAAuB,CAACa,aAAD,CAAxB,CAAR;AACA,KALF,EAMEC,KANF,CAMQT,KAAK,IAAIG,QAAQ,CAACJ,uBAAuB,CAACC,KAAK,CAACU,OAAP,CAAxB,CANzB;AAOA,GAXD;AAYA,CAbM","sourcesContent":["import { ShopActionTypes } from \"./shop.types\";\n\nimport {\n\tfirestore,\n\tconvertCollectionSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = collection => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: collection\n});\n\nexport const fetchCollectionsFailure = error => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n\tpayload: error\n});\n\nexport const startFetchingCollectionsAsync = () => {\n\treturn dispatch => {\n\t\tconst collectionRef = firestore.collection(\"collections\");\n\t\tdispatch(fetchCollectionsStart());\n\n\t\tcollectionRef\n\t\t\t.get()\n\t\t\t.then(snapshot => {\n\t\t\t\tconst collectionMap = convertCollectionSnapshotToMap(snapshot);\n\t\t\t\tdispatch(fetchCollectionsSuccess(collectionMap));\n\t\t\t})\n\t\t\t.catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}